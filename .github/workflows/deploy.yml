name: Build and Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-backend ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-backend

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-frontend ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-frontend

      - name: Save SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'

            
            docker network inspect sleepnet >/dev/null 2>&1 || docker network create sleepnet

            
            docker pull ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-backend
            docker pull ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-frontend

          
            docker stop back || true && docker rm back || true
            docker stop front || true && docker rm front || true
            docker stop mongo || true && docker rm mongo || true

           
            docker run -d --name mongo \
              --network sleepnet \
              --restart always \
              -p 27017:27017 \
              ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-mongo

            
            docker run -d --name back \
              --network sleepnet \
              --restart always \
              -p 5000:5000 \
              ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-backend

            
            docker run -d --name front \
              --network sleepnet \
              --restart always \
              -p 80:80 \
              ${{ secrets.DOCKER_USERNAME }}/projet_sleep_tracker-frontend

          EOF
